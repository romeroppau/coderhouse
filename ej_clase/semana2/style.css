/*Declaracion CSS; Selector, proiedad y un valor
Selector --> apunta al elemento al que se le quiere cambiar el estilo
Propiedad--> Aspecto a cambiar
Valor    --> Configuracion de la propiedad

SINTAXIS:
selector{
    propiedad:valor
}
*/

/*Reset para eliminar los estilos predeterminados de las paginas*/

*{
    box-sizing: border-box;
}
/*Forma de importar fuentes o pegamos en el <head> de html*/
@import url('https://fonts.googleapis.com/css2?family=Abhaya+Libre&display=swap');

/*-- Estilos generales --*/
body {
    font-family: 'Abhaya Libre', serif;
    color: #3c3838;
    /*color-> puede ser color, hexadecimal, rgb y rgba
    color: rgb(0,0,255)
    color: rgba(0,0,0, alpha). --> alpha es usado para 
    la opacidad del texto*/
    background-color: #ffe5ae;
}

/*-- Texto y encabezados --*/
p{  
    font-size: 18px;
    /*Unidades de medida|px, em, rem,% 
    En general, texto->px /// anchos o altos-> %*/
    margin: 20px;
}
h3{
    color: #3c3838;
    font-weight: bold;
    text-align: center;
    text-transform: uppercase;
}
/* -- Encabezados y titulos -- */
header{
    text-align: center;
}
#sublime{
    text-align: center;
    letter-spacing: 6px;
    font-weight: bold;
}
.titulos{
    color:#3c3838;
    text-align: center;
    font-family: 'Abhaya Libre',serif;
    line-height: 30px;
    letter-spacing: 5px;
    text-decoration:overline;
    font-size: 28px;

}

footer p{
    font-size: 15px;
    text-decoration: none;
    margin: 5px;
}

/* -- Enlaces y navegacion -- */
.enlaces{
    text-decoration: none;
}

/* -- Multimedia -- */
.videos{
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 300px;
    height: auto;
}
.imagenes{
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 300px;
    height: auto;
}


/*BOX MODEL*/
.block-element {
    display: block;
    width: 100%;
    margin-top: 0;
    margin-bottom: 1rem;
    padding: 0.5rem;
    background-color: #f0f0f0;
    border: 1px solid #ccc;
    font-family: Arial, sans-serif;
    font-size: 16px;
}
.inline-element {
    display: inline;
    color: red;
    font-weight: bold;
}
.inline-block-element {
    display: inline-block;
    width: 150px;
    height: 100px;
    background-color: lightgreen;
    margin: 10px;
}
/*PROPIEDADES DE POSICIONAMIENTO*/
.static-box {
    position: static;
    display: block;
    width: auto;
    height: auto;
    margin: 0;
    padding: 0;
    background-color: transparent;
    border: none;
    font-family: inherit;
    font-size: inherit;
    color: inherit;
}

.relative-box {
    position: relative;
    top: 0;
    left: 10px;
    background-color: lightblue;
    padding: 10px;
}

.container {
    position:relative;
    width: 250px;
    height: 100px;
    background-color: lightgray;
}
.absolute-box {
    position: absolute;
    top: 50px;
    left: 50px;
    background-color: lightcoral;
    padding: 10px;
} 

.fixed-box {
    position: fixed;
    top: 0;
    right: 0;
    background-color: lightgreen;
    padding: 10px;
}

.sticky-container {
    height: 100px;
    background-color: lightyellow;
}
.sticky-box {
    position: sticky;
    top: 5px;
    background-color: lightpink;
    padding: 5px;
}
/*FLEXBOX*/
.flex-container1 { 
    display: flex; 
    background-color: lightgray; 
}
/*flex-direction: especifica la dirección en la que los elementos flexibles (flex items) se colocan dentro del contenedor.
    - row (valor por defecto): Los elementos se colocan en una fila horizontal.
    - row-reverse: Los elementos se colocan en una fila horizontal en orden inverso.
    - column: Los elementos se colocan en una columna vertical.
    - column-reverse: Los elementos se colocan en una columna vertical en orden inverso.*/
.flex-container {
    display: flex;
    flex-wrap: wrap;
}
/*flex-flow*/
.flex-container {
    display: flex;
    flex-flow: row wrap;
}
/*justify-content : alinea los elementos flexibles a lo largo del eje principal del contenedor (horizontalmente en una fila, verticalmente en una columna).
- flex-start (valor por defecto): Los elementos se alinean al inicio del contenedor.
- flex-end: Los elementos se alinean al final del contenedor.
- center: Los elementos se centran en el contenedor.
- space-between: Los elementos se distribuyen uniformemente con el primer elemento al inicio y el último al final.
- space-around: Los elementos se distribuyen uniformemente con espacio igual alrededor de cada uno.
- space-evenly: Los elementos se distribuyen con espacio igual entre ellos.*/
.flex-container {
    display: flex;
    justify-content: center;
}
/*align-items : linea los elementos flexibles a lo largo del eje transversal (perpendicular al eje principal) del contenedor.
- stretch (valor por defecto): Los elementos se estiran para llenar el contenedor.
- flex-start: Los elementos se alinean al inicio del contenedor.
- flex-end: Los elementos se alinean al final del contenedor.
- center: Los elementos se centran en el contenedor.
- baseline: Los elementos se alinean a lo largo de su línea base.*/
.flex-container {
    display: flex;
    align-items: center;
}
/*align-content: alinea las líneas del contenedor flexible cuando hay espacio extra en el eje transversal.
- stretch (valor por defecto): Las líneas se estiran para ocupar el espacio disponible.
- flex-start: Las líneas se alinean al inicio del contenedor.
- flex-end: Las líneas se alinean al final del contenedor.
- center: Las líneas se centran en el contenedor.
- space-between: Las líneas se distribuyen uniformemente con el primer línea al inicio y la última al final.
- space-around: Las líneas se distribuyen uniformemente con espacio igual alrededor de cada una.
- space-evenly: Las líneas se distribuyen con espacio igual entre ellas.
*/
.flex-container2 {
    display: flex;
    flex-wrap: wrap;
    align-content: space-between;
}
/*flex item:order*/
.item { 
    padding: 10px; 
    background-color: lightcoral; 
    margin: 5px;
}
/*flex-grow*/
.flex-container3 {
    display: flex;
}
.item2 {
    padding: 10px;
    background-color: lightblue;
    margin: 5px;
}
/*flex-shrink*/
.flex-container4 {
    display: flex;
    width: 300px;
}
.item3 {
    width: 200px;
    padding: 10px;
    background-color: lightgreen;
    margin: 5px;
}
/*flex-basis*/
.flex-container5 {
    display: flex;
}
.item4 {
    padding: 10px;
    background-color: lightpink;
    margin: 5px;
}
